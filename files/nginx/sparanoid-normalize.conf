# Can ONLY be used in server directives

#
# This config enables to access /.well-known/acme-challenge/xxxxxxxxxxx
# on all our sites (HTTP), including all subdomains.
# This is required by ACME Challenge (webroot authentication).
# You can check that this location is working by placing ping.txt here:
# /var/www/letsencrypt/.well-known/acme-challenge/ping.txt
# And pointing your browser to:
# http://xxx.domain.tld/.well-known/acme-challenge/ping.txt
#
# Sources:
# https://community.letsencrypt.org/t/howto-easy-cert-generation-and-renewal-with-nginx/3491
location ^~ /.well-known/acme-challenge/ {
  default_type            "text/plain";
  # uncomment the following line to use alias mode (ie. letsencrypt.sh)
  # alias                   /srv/www/letsencrypt/;
  try_files               $uri =404;
}

# Avoid caching service worker entry
location ^~ /service-worker.js {
  expires              -1;
}

# Expire rules for static content

# No default expire rule. This config mirrors that of apache as outlined in the
# html5-boilerplate .htaccess file. However, nginx applies rules by location,
# the apache rules are defined by type. A concequence of this difference is that
# if you use no file extension in the url and serve html, with apache you get an
# expire time of 0s, with nginx you'd get an expire header of one month in the
# future (if the default expire rule is 1 month). Therefore, do not use a
# default expire rule with nginx unless your site is completely static

# cache.appcache, your document html and data
# location ~* \.(?:manifest|appcache|html?|xml|json)$ {
location ~* \.(?:manifest|appcache|xml|json)$ {
  expires              -1;
}

# Feed
location ~* \.(?:rss|atom)$ {
  expires              1h;
  add_header           Cache-Control "public";
}

# Media: images, icons, video, audio, HTC
location ~* \.(?:jpg|jpeg|gif|png|ico|cur|gz|svg|svgz|mp4|ogg|ogv|webm|htc|zip|pdf|flv|swf)$ {
  expires              1M;
  access_log           off;
  add_header           Cache-Control "public";
}

# CSS and Javascript
location ~* \.(?:css|js)$ {
  expires              1y;
  access_log           off;
  add_header           Cache-Control "public";
}

# Cross domain webfont access
location ~* \.(?:ttf|ttc|otf|eot|woff|woff2)$ {
  add_header           "Access-Control-Allow-Origin" "*";

  # Also, set cache rules for webfonts.
  #
  # See http://wiki.nginx.org/HttpCoreModule#location
  # And https://github.com/h5bp/server-configs/issues/85
  # And https://github.com/h5bp/server-configs/issues/86
  expires              1M;
  access_log           off;
  add_header           Cache-Control "public";
}

# Prevent clients from accessing hidden files (starting with a dot)
# This is particularly important if you store .htpasswd files in the site hierarchy
# Access to `/.well-known/` is allowed.
# https://www.mnot.net/blog/2010/04/07/well-known
# https://tools.ietf.org/html/rfc5785
location ~* /\.(?!well-known\/) {
  deny                 all;
}

# Prevent clients from accessing to backup/config/source files
location ~* (?:\.(?:bak|conf|dist|fla|in[ci]|log|psd|sh|sql|sw[op])|~)$ {
  deny                 all;
}

# prevent bench
if ($http_user_agent ~* (nsplayer|bench)) {
  return               444;
}

# error pages
# error_page 403 $scheme://$server_name;
error_page             403 404 500 502 503 504 /error/index.html;
